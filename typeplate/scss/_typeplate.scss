/*!
+---------------------------------------------------------------------+
|        _                               _         _                  |
|       | |_  _   _  _ __    ___  _ __  | |  __ _ | |_  ___           |
|       | __|| | | || '_ \  / _ \| '_ \ | | / _` || __|/ _ \          |
|       | |_ | |_| || |_) ||  __/| |_) || || (_| || |_|  __/          |
|        \__| \__, || .__/  \___|| .__/ |_| \__,_| \__|\___|          |
|             |___/ |_|          |_|                                  |
|                                                                     |
|                                                                     |
| URL: http://typeplate.com                                           |
| VERSION: 1.0.1                                                      |
| Github: https://github.com/typePlate/typeplate.github.com           |
| AUTHORS: Zachary Kain (@zakkain) & Dennis Gaebel (@gryghostvisuals) |
| LICENSE: Creative Commmons                                          |
| http://creativecommons.org/licenses/by/3.0                          |
|                                                                     |
+---------------------------------------------------------------------+
*/


// ==========================================================================//
//
// $Variables
//
// ==========================================================================//


// $BaseType-Variables
// -------------------------------------//

$weight: normal !default;
$line-height: 1.65 !default;
$font-size: 112.5 !default; // percentage value (16 * 112.5% = 18px)
$font-base: 16 * ($font-size/100) !default; // converts our percentage to a pixel value
$measure: $font-base * $line-height;
$font-family: serif;
$font-family-sans: sans-serif;
$font-properties: $weight, $line-height, $font-size, $font-family;

//the serif boolean var can be redeclared from another stylesheet. However
//the var must be placed after your @import "typeplate.scss";
$serif-boolean: true !default;


// $Small Print-Variables
// -------------------------------------//

$fine-print-size: 65% !default;


// $Color-Variables
// -------------------------------------//

$body-copy-color: #444 !default;
$heading-color: #222 !default;


// $Ampersand @font-face-Variables
// -------------------------------------//

$amp-fontface-name: Ampersand !default;
$amp-fontface-source: local('Georgia'), local('Garamond'), local('Palatino'), local('Book Antiqua') !default;
$amp-fontface-fallback: local('Georgia') !default;


// $Ampersand font-family-Variables
// -------------------------------------//
// Allows for our ampersand element to have differing
// font-family from the ampersand unicode font-family.

$amp-font-family: Verdana, sans-serif !default;


// $Icon Font Helper-Variables
// --------------------------------------------------------------------------
// ICON FONTS HELPER
// In order to set you must have the following…
// 1. A Compass @import rule (i.e. @import "compass") before this stylesheet
// 2. [OPTIONAL STEP] Name your fonts directory folder if you do not have one
// 3. Specify within your 'config.rb' file the following line…
//
// fonts_dir = "name-of-your-fonts-directory" ( i.e. fonts_dir = "fonts" )
//
// Example usage
// ex.1) $web-fonts: (icon-name);
// ex.2) $web-fonts: (icon-name1, icon-name2, icon-name3);
$web-fonts: null !default;


// $TypeScale-Variables
// -------------------------------------//

$tera: 117 !default; // 117 = 18 × 6.5
$giga: 90 !default; // 90 = 18 × 5
$mega: 72 !default; // 72 = 18 × 4
$alpha: 60 !default; // 60 = 18 × 3.3333
$beta: 48 !default; // 48 = 18 × 2.6667
$gamma: 36 !default; // 36 = 18 × 2
$delta: 24 !default; // 24 = 18 × 1.3333
$epsilon: 21 !default; // 21 = 18 × 1.1667
$zeta: 18 !default; // 18 = 18 × 1


// $TypeScale Unit-Variables
// -------------------------------------//

$type-scale-unit-value: rem !default;


// $Text Indentation-Variables
// -------------------------------------//

$indent-val: 1.5em !default;


// $StatsTab-Variables
// -------------------------------------//

$stats-font-size: 1.5rem !default;
$stats-list-margin: 0 0.625rem 0 0 !default;
$stats-list-padding: 0 0.625rem 0 0 !default;
$stats-item-font-size: 0.875rem !default;
$stats-item-margin: 0.125rem 0 0 0 !default;
$stats-border-style: 0.125rem solid #ccc !default;


// $Pull Quotes-Variables
// -------------------------------------//

$pull-quote-fontsize: 4em !default;
$pull-quote-opacity: 0.5 !default;
$pull-quote-color: #dc976e !default;


// $Citation Display-Variables
// -------------------------------------//

$cite-display: block !default;
$cite-text-align: right !default;
$cite-font-size: inherit !default;


// $Small Caps-Variables
// -------------------------------------//

$small-caps-color: gray !default;
$small-caps-weight: 600 !default;



// ==========================================================================//
//
// $Fontfaces
//
// ==========================================================================//


// $UnicodeRange Ampersand
// -------------------------------------//

@font-face {
	font-family: '#{$amp-fontface-name}';
	src: $amp-fontface-source;
	unicode-range: U+0026;
}

// Ampersand fallback font for unicode range
@font-face {
	font-family: '#{$amp-fontface-name}';
	src: $amp-fontface-fallback;
	unicode-range: U+270C;
}


// $I c o n  F o n t  H e l p e r
// --------------------------------------------------------------------------
// ICON FONTS HELPER
// In order to set you must have the following…
// 1. Compass
// 2. Create a 'fonts' directory in the root of your project
// 3. Specify within your 'config.rb' file the following line…
//
// fonts_dir = "name-of-your-fonts-directory" ( i.e. fonts_dir = "fonts" )
//
// Example usage
// ex.1) $web-fonts: (icon-name);
// ex.2) $web-fonts: (icon-name1, icon-name2, icon-name3);

// @include font-face() is a compass function
// based on this gist by Chris Van Patten
// https://gist.github.com/4469518

@if ($web-fonts != null) {
	@each $font in $web-fonts {
		@include font-face( $font,
			font-files(
				'#{$font}/#{$font}.woff',
				'#{$font}/#{$font}.ttf',
				'#{$font}/#{$font}.svg', svg
			),
			'#{$font}/#{$font}.eot'
			)
	}
}


// ==========================================================================//
//
// $Functions and Helpers
//
// ==========================================================================//


// $Context Calculator
// -------------------------------------//

@function ems($target, $context) {
	@return ($target/$context)#{em};
}


// $Modular Scale Calculator
// -------------------------------------//
// http://thesassway.com/projects/modular-scale

@function modular-scale($scale, $base, $value) {
	// divide a given font-size by base font-size & return a relative em value
	@return ($scale/$base)#{$value};
}


// $Measure Margin Calculator
// -------------------------------------//

@function measure-margin($scale, $measure, $value) {
	// divide 1 unit of measure by given font-size & return a relative em value
	@return ($measure/$scale)#{$value};
}



// ==========================================================================//
//
// $Mixins / Placeholders
//
// ==========================================================================//


// $Modular Scale
// -------------------------------------//

@mixin modular-scale($scale, $base, $value, $measure:"") {
	font-size: $scale#{px};
	font-size: modular-scale($scale, $base, $value);
	@if $measure != "" {
		margin-bottom: measure-margin($scale, $measure, $value);
	}
}


// $Body Copy
// -------------------------------------//

@mixin base-type($weight, $line-height, $font-size, $font-family...) {
	@if $serif-boolean {
		font: $weight #{$font-size}%/#{$line-height} $font-family;
	}@else {
		font: $weight #{$font-size}%/#{$line-height} $font-family-sans;
	}
}


// $Hypens
// -------------------------------------//
//http://trentwalton.com/2011/09/07/css-hyphenation

@mixin css-hyphens($val) {
	// Accepted values: [ none | manual | auto ]
	-webkit-hyphens: $val; // Safari 5.1 thru 6, iOS 4.2 thru 6
	-moz-hyphens: $val; // Firefox 16 thru 20
	-ms-hyphens: $val; // IE10
	-o-hyphens: $val; // PRESTO...haha LOL
	hyphens: $val; // W3C standard
}


// $Smallcaps
// -------------------------------------//
// http://blog.hypsometry.com/articles/true-small-capitals-with-font-face
// ISSUE #1 : https://github.com/typeplate/typeplate.github.com/issues/1

@mixin smallcaps($color, $font-weight) {
	// depends on the font family.
	// some font-families don't support small caps
	// or don't provide them with their web font.
	font-variant: small-caps;
	font-weight: $font-weight;
	text-transform: lowercase;
	color: $color;
}


// $Fontsize Adjust
// -------------------------------------//
// correct x-height for fallback fonts: requires secret formula
// yet to be discovered. This is still wacky for support. Use
// wisely grasshopper.

@mixin font-size-adjust($adjust-value) {
	// firefox 17+ only (as of Feb. 2013)
	font-size-adjust: $adjust-value;
}


// $Ampersand
// -------------------------------------//

@mixin ampersand($amp-font-family...) {
	font-family: $amp-font-family;
}

%ampersand-placeholder {
	@include ampersand($amp-fontface-name, $amp-font-family);
}

// Call your ampersand on any element you wish from another stylesheet
// using this Sass extend we've provided...
// @extend %ampersand-placeholder;


// $Blockquote-Mixin
// -------------------------------------//

// Remove the quotes within the p tag
// use pseudos to create curly quotes around blockquote element

// Citation Mixin for Custom Styling
@mixin cite-style($display, $text-align, $font-size) {
	display: $display;
	font-size: $font-size;
	text-align: $text-align;
}

%cite {
	@include cite-style($cite-display, $cite-text-align, $cite-font-size);
}

@mixin blockquote($citation-flourish) {
	p {
		&:last-of-type {
			margin-bottom: -#{$line-height/2}em;
		}
	}
	+ figcaption {
		@extend %cite;
		&:before {
			content: "#{$citation-flourish}";
		}
	}
}

// $Pull Quotes-Mixin
// -------------------------------------//

@mixin pull-quotes($pull-quote-fontsize, $pull-quote-opacity, $pull-quote-color) {
	position: relative;
	padding: ems($pull-quote-fontsize, $pull-quote-fontsize);
	&:before,
	&:after {
		height: ems($pull-quote-fontsize, $pull-quote-fontsize);
		opacity: $pull-quote-opacity;
		position: absolute;
		font-size: $pull-quote-fontsize;
		color: $pull-quote-color;
	}
	&:before {
		content: '“';
		top:  0;
		left: 0;
	}
	&:after {
		content: '”';
		bottom: 0;
		right: 0;
	}
}


// $Wordwrap
// -------------------------------------//
// Silent Sass Classes - A.K.A Placeholders
//
// normal: Indicates that lines may only break at normal word break points.
// break-word : Indicates that normally unbreakable words may be broken at
// arbitrary points if there are no otherwise acceptable break points in the line.

%breakword {
	word-wrap: break-word;
}

%normal-wrap {
	word-wrap: normal;
}

%inherit-wrap {
	word-wrap: auto;
}


// $Dropcaps
// -------------------------------------//
/**
 * Dropcap Sass @include
 * Use the following Sass @include with any selector you feel necessary.
 *
	@include dropcap($float: left, $font-size: 4em, $font-family: inherit, $text-indent: 0, $margin: inherit, $padding: inherit, $color: inherit, $lineHeight: 1, $bg: transparent);
 *
 * Extend this object into your custom stylesheet.
 *
 */

// Use @include .drop-cap() to pass the following
// arguments below. Feel free to pass in arguments we've provided.
// At this time you cannot pass in font-family arguments but you're gonna
// change that anyway so why not just make that separately in your declaration.
// Make sure you add the class “.drop-cap” to your markup in order to operate.
@mixin dropcap($float: left, $font-size: 4em, $font-family: inherit, $text-indent: 0, $margin: inherit, $padding: inherit, $color: inherit, $lineHeight: 1, $bg: transparent) {
	&:first-letter {
		float: $float;
		margin: $margin;
		padding: $padding;
		font-size: $font-size;
		font-family: $font-family;
		line-height: $lineHeight;
		text-indent: $text-indent;
		background: $bg;
		color: $color;
	}
}

// Combats our sibling paragraphs syling and indentation
// As not to ruin our beautiful drop caps.
p + .drop-cap {
	text-indent: 0;
	margin-top: 0;
}


// $Definition Lists
// -------------------------------------//
// lining
// http://lea.verou.me/2012/02/flexible-multiline-definition-lists-with-2-lines-of-css
//
// dictionary-style
// http://lea.verou.me/2012/02/flexible-multiline-definition-lists-with-2-lines-of-css

@mixin definition-list-style($style) {
	// lining style
	@if $style == lining {
		dt,
		dd {
			display: inline;
			margin: 0;
		}
		dt,
		dd {
			& + dt {
				&:before {
					content: "\A";
					white-space: pre;
				}
			}
		}
		dd {
			& + dd {
				&:before {
					content: ", ";
				}
			}
			&:before {
					content: ": ";
					margin-left: -0.2rem; //removes extra space between the dt and the colon
			}
		}
	}
	// dictionary-style
	@if $style == dictionary-style {
		dt {
			display: inline;
			counter-reset: definitions;
			& + dt {
				&:before {
					content: ", ";
					margin-left: -0.2rem; // removes extra space between the dt and the comma
				}
			}
		}
		dd {
			display: block;
			counter-increment: definitions;
			&:before {
				content: counter(definitions, decimal) ". ";
			}
		}
	}
}



// ==========================================================================//
//
// $Typeplate Styles
//
// ==========================================================================//


// $Globals
// -------------------------------------//

html {
	@include base-type($font-properties...);
}

body {
	// Ala Trent Walton
	@include css-hyphens(auto);

	// normal: Indicates that lines may only break at normal word break points.
	// break-word : Indicates that normally unbreakable words may be broken at ...
	// arbitrary points if there are no otherwise acceptable break points in the line.
	@extend %breakword;
	color: $body-copy-color;
}

small {
	font-size: $fine-print-size;
}

// $Headings
// -------------------------------------//

// styles for all headings, in the style of @csswizardry
%hN {
	text-rendering: optimizeLegibility; // voodoo to enable ligatures and kerning
	line-height: 1; // this fixes huge spaces when a heading wraps onto two lines
	margin-top: 0;
}

// Multi-dimensional array, where:
// the first value is the name of the class
// and the second value is the variable for the size
$sizes: tera $tera, giga $giga, mega $mega, alpha $alpha, beta $beta, gamma $gamma, delta $delta, epsilon $epsilon, zeta $zeta;

// Sass loop to associate h1-h6 tags with their appropriate greek
// heading based on a modular scale.
// for each size in the scale, create a class
@each $size in $sizes {
	.#{nth($size, 1)} {
		@include modular-scale(nth($size, 2), $font-base, '#{$type-scale-unit-value}', $measure);
	}
}

// associate h1-h6 tags with their appropriate greek heading
h1 {
	@extend .alpha;
	@extend %hN;
}

h2 {
	@extend .beta;
	@extend %hN;
}

h3 {
	@extend .gamma;
	@extend %hN;
}

h4 {
	@extend .delta;
	@extend %hN;
}

h5 {
	@extend .epsilon;
	@extend %hN;
}

h6 {
	@extend .zeta;
	@extend %hN;
}


// $Parargraphs
// -------------------------------------//

p {
	margin: auto auto $indent-val;
	& + p {
		//siblings indentation
		text-indent: $indent-val;
		margin-top: -$indent-val;
	}
}


// $Hyphenation
// -------------------------------------//
// http://meyerweb.com/eric/thoughts/2012/12/17/where-to-avoid-css-hyphenation

abbr,
acronym,
blockquote,
code,
dir,
kbd,
listing,
plaintext,
q,
samp,
tt,
var,
xmp {
	@include css-hyphens(none);
}


// $Codeblocks
// -------------------------------------//

@mixin white-space($wrap-space) {
	@if $wrap-space == 'pre-wrap' {
		white-space: #{-moz-}$wrap-space; // Firefox 1.0-2.0
		white-space: $wrap-space;       // current browsers
	} @else {
		white-space: $wrap-space;
	}
}

pre code {
	@extend %normal-wrap;
	@include white-space(pre-wrap);
}

pre {
	@include white-space(pre);
}

code {
	@include white-space(pre);
	font-family: monospace;
}


// $Smallcaps
// -------------------------------------//
/**
 * Abbreviations Markup
 *
	<abbr title="hyper text markup language">HMTL</abbr>
 *
 * Extend this object into your markup.
 *
 */
abbr {
	@include smallcaps($small-caps-color, $small-caps-weight);
	&:hover {
		cursor: help;
	}
}


// $Headings Color
// -------------------------------------//

h1,
h2,
h3,
h4,
h5,
h6 {
	color: $heading-color;
}


// $Definition Lists
// -------------------------------------//
/**
 * Lining Definition Style Markup
 *
	<dl class="lining">
		<dt><b></b></dt>
		<dd></dd>
	</dl>
 *
 * Extend this object into your markup.
 *
 */
.lining {
	@include definition-list-style(lining);
}

/**
 * Dictionary Definition Style Markup
 *
	<dl class="dictionary-style">
		<dt><b></b></dt>
			<dd></dd>
	</dl>
 *
 * Extend this object into your markup.
 *
 */
.dictionary-style {
	@include definition-list-style(dictionary-style);
}


// $Stats Tabs
// -------------------------------------//
/**
 * Stats Tab Markup
 *
	<ul class="stats-tabs">
		<li><a href="#">[value]<b>[name]</b></a></li>
	</ul>
 *
 * Extend this object into your markup.
 *
 */
.stats-tabs {
	padding: 0;
	li {
		display: inline-block;
		margin: $stats-list-margin;
		padding: $stats-list-padding;
		border-right: $stats-border-style;
		&:last-child {
			margin: 0;
			padding: 0;
			border: none;
		}
		a {
			display: inline-block;
			font-size: $stats-font-size;
			font-weight: bold;
			b {
				display: block;
				margin: $stats-item-margin;
				font-size: $stats-item-font-size;
				font-weight: normal;
			}
		}
	}
}


// $Blockquote-Markup
// -------------------------------------//
/**
 * Blockquote Markup
 *
		<figure>
			<blockquote cite="">
				<p></p>
			</blockquote>
			<figcaption>	
				<cite>
					<small><a href=""></a></small>
				</cite>
			</figcaption>
		</figure>
 *
 * Extend this object into your markup.
 *
 */


// $Pull Quotes-Markup
// -------------------------------------//
// http://24ways.org/2005/swooshy-curly-quotes-without-images
//
// http://todomvc.com - Thanks sindresorhus!
// https://github.com/typeplate/typeplate.github.com/issues/49

/**
 * Pull Quotes Markup
 *
	<aside class="pull-quote">
		<blockquote>
			<p></p>
		</blockquote>
	</aside>
 *
 * Extend this object into your custom stylesheet.
 *
 */

.pull-quote {
	 @include pull-quotes($pull-quote-fontsize, $pull-quote-opacity, $pull-quote-color);
}


// $Figures
// -------------------------------------//
/**
 * Figures Markup
 *
	<figure>
		<figcaption>
			<strong>Fig. 4.2 | </strong>Type Anatomy, an excerpt from Mark Boulton's book<cite title="http://designingfortheweb.co.uk/book/part3/part3_chapter11.php">"Designing for the Web"</cite>
		</figcaption>
	</figure>
 *
 * Extend this object into your markup.
 *
 */


 // $Footnotes
// -------------------------------------//
/**
 * Footnote Markup : Replace 'X' with your unique number for each footnote
 *
	<article>
		<p><sup><a href="#fn-itemX" id="fn-returnX"></a></sup></p>
		<footer>
			<ol class="foot-notes">
				<li id="fn-itemX"><a href="#fn-returnX">↩</a></li>
			</ol>
		</footer>
	</article>
 *
 * Extend this object into your markup.
 *
 */
